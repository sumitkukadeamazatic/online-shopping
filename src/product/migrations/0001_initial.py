# Generated by Django 2.0.7 on 2018-07-27 06:07

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        ('seller', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'brand',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.CharField(max_length=50)),
                ('parent_id', models.BigIntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'catgory',
            },
        ),
        migrations.CreateModel(
            name='CategoryTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
            options={
                'db_table': 'category_tax',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'feature',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TimeField()),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=19)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=19)),
                ('slug', models.CharField(max_length=50)),
                ('images', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ProductFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'product_feature',
            },
        ),
        migrations.CreateModel(
            name='ProductSeller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quentity', models.IntegerField()),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('min_delivery_days', models.PositiveSmallIntegerField()),
                ('max_delivery_days', models.PositiveSmallIntegerField()),
                ('available_pin_codes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), size=None)),
                ('is_default', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'product_seller',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=2, max_digits=3)),
                ('title', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('slug', models.CharField(max_length=50)),
                ('percent', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(decimal_places=2, max_digits=5), size=None)),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'tax',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
            options={
                'db_table': 'wishlist',
            },
        ),
        migrations.AddIndex(
            model_name='tax',
            index=models.Index(fields=['name', 'created_at', 'updated_at'], name='tax_index'),
        ),
        migrations.AddField(
            model_name='review',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.Product'),
        ),
        migrations.AddField(
            model_name='review',
            name='seller',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='seller.Seller'),
        ),
        migrations.AddField(
            model_name='review',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User'),
        ),
        migrations.AddField(
            model_name='productseller',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product'),
        ),
        migrations.AddField(
            model_name='productseller',
            name='seller_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='seller.Seller'),
        ),
        migrations.AddField(
            model_name='productfeature',
            name='feature_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Feature'),
        ),
        migrations.AddField(
            model_name='productfeature',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Category'),
        ),
        migrations.AddField(
            model_name='feature',
            name='category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Category'),
        ),
        migrations.AddField(
            model_name='categorytax',
            name='category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Category'),
        ),
        migrations.AddField(
            model_name='categorytax',
            name='tax_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Tax'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name', 'created_at', 'updated_at'], name='category_index'),
        ),
        migrations.AddIndex(
            model_name='brand',
            index=models.Index(fields=['name', 'created_at', 'updated_at'], name='brand_index'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['created_at', 'updated_at'], name='wishlist_index'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['rating', 'created_at', 'updated_at'], name='review_index'),
        ),
        migrations.AddIndex(
            model_name='productseller',
            index=models.Index(fields=['discount', 'max_delivery_days', 'min_delivery_days', 'created_at', 'updated_at'], name='product_seller_index'),
        ),
        migrations.AddIndex(
            model_name='productfeature',
            index=models.Index(fields=['value', 'created_at', 'updated_at'], name='product_feature_index'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name', 'created_at', 'updated_at'], name='product_index'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['name', 'created_at', 'updated_at'], name='feature_index'),
        ),
        migrations.AddIndex(
            model_name='categorytax',
            index=models.Index(fields=['created_at', 'updated_at'], name='category_tax_index'),
        ),
    ]
